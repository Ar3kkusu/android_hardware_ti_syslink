Need to check for the following before using autotools:
=======================================================
	Tools Prequisites:
	------------------
	1. Autoconf version: 2.61 and above.
	2. Automake version: 1.9.6 and above.
	3. libtool version : 1.5.6 and above.

	Set the following envirnoment variables:
	----------------------------------------
	1. export ARCH=arm
	2. export CROSS_COMPILE=arm-none-linux-gnueabi-

	To enable DEBUG Option:
	----------------------
	1. You can enable the DEBUG option by uncommenting the following line
	   # ENABLE_DEBUG=--enable-debug in build_directions.sh file.
	2. You can also enable the DEBUG option by entering ./configure --enable-debug.
	   Note: please check for ./configure --help before running configure.

Steps to Build syslink & bridge:
================================
1st Method:
----------
	Build directions:
	-----------------
	1. sh build_directions.sh --clean  --> for clean build.
	2. sh build_directions.sh ---> for normal build.
	3. Enter the Prefix path ( e.g., /omap_data/development/Imtiaz/omap_dev/userspace-syslink)
	4. Enter the Tiler-Userspace Path  (e.g., /omap_data/development/Imtiaz/omap_dev/tiler-userspace)
	5. Enter the path to kernel-syslink (e.g., /omap_data/development/Imtiaz/omap_dev/kernel-syslink)
	6. Enter the Toolchain Path ( e.g., /omap_data/omapts/arm-2008q3-72/bin)
	7. It will display the following options
		1--------------> Build Syslink Only
		2--------------> Build Bridge Only
		3--------------> Build Syslink & Bridge
		Any other Option to exit from Build system
		Enter your option
	8. If option 1 is chosen then
	    a. First the libmemgr.so is built and installed in $(PREFIX)/target/lib folder.
	    b. Second the Syslink APIs, daemons and samples will be built and installed in $(PREFIX)/target/lib
	       and $(PREFIX)/target/syslink folder respectively.
	9. If option 2 is chosen then
	   The Tesla Bridge APIs and samples wiil be build and installed in $(PREFIX)/target/lib and
	   $(PREFIX)/target/dspbridge folder respectively.
	10. If option 3 is chosen then
	   a. First libmemmgr.so is built and installed in $(PREFIX)/target/lib folder.
	   b. Second the Syslink APIs and samples will be built and installed in $(PREFIX)/target/lib
	      and $(PREFIX)/target/syslink folder respectively
	   c. Third the Tesla Bridge APIs and Samples will be built and installed in $(PREFIX)/target/lib
              and $(PREFIX)/target/dspbridge folder respectively.

2nd Method:
----------
	Prequisites:
	------------
	To build only syslink:
	---------------------
	1. export PATH=<Toolchain Path>:$PATH (e.g., Toolchain path:/omap_data/omapts/arm-2008q3-72/bin)
	2. cd syslink
	3. sh bootstrap.sh
	4. ./configure --host=arm-none-linux-gnueabi --prefix=<PREFIX PATH> --build=i686-pc-linux-gnu
	5. make PREFIX=<PREFIX PATH> KRNLSRC=<KERNEL-PATH>
	6. make install
	7. cd -

	To build only bridge:
	---------------------
	1. export PATH=<Toolchain Path>:$PATH (e.g., Toolchain path:/omap_data/omapts/arm-2008q3-72/bin)
	2. cd bridge
	3. sh bootstrap.sh
	4. ./configure --host=arm-none-linux-gnueabi- --prefix=<PREFIX PATH> --build=i686-pc-linux-gnu
	5. make
	6. make install
	7. cd -

Steps to build only the syslink APIs:
=====================================
	Prequisites:
	------------
	1. export PATH=<Toolchain Path>:$PATH (e.g., Toolchain path:/omap_data/omapts/arm-2008q3-72/bin)
	2. cd syslink
	3. sh bootstrap.sh
	4. ./configure --host=arm-none-linux-gnueabi- --prefix=<PREFIX PATH> --build=i686-pc-linux-gnu
	5. cd api
	6. make clean
	7. make
	8. make install
